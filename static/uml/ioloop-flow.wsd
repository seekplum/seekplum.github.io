```plantuml
@startuml

title tornado.ioloop实例化流程图

start

:tornado.ioloop.IOLoop.current();

:tornado.platform.KQueueIOLoop;

:tornado.util.Configurable().____new____();

note right
代码去掉逻辑分支，精简为

base = cls.configurable_base()
init_kwargs = {}
impl = cls.configured_class()
instance = super(Configurable, cls).__new__(impl)
instance.initialize(*args, **init_kwargs)
return instance
end note

:tornado.ioloop.PollIOLoop.configurable_base();
note right
@classmethod
def configurable_base(cls):
    return PollIOLoop
end note

:tornado.util.Configurable().configured_class();
note right
代码去掉逻辑分支，精简为

base = cls.configurable_base()
base.__impl_class = cls.configurable_default()
return base.__impl_class
end note


:tornado.ioloop.PollIOLoop.configurable_default();
note right
@classmethod
def configurable_default(cls):
    if hasattr(select, "epoll"):
        from tornado.platform.epoll import EPollIOLoop
        return EPollIOLoop
    if hasattr(select, "kqueue"):
        # Python 2.6+ on BSD or Mac
        from tornado.platform.kqueue import KQueueIOLoop
        return KQueueIOLoop
    from tornado.platform.select import SelectIOLoop
    return SelectIOLoop
end note

:tornado.platform.KQueueIOLoop.initialize(**kwargs);
note right
def initialize(self, **kwargs): # kwargs 值为 {}
    super(KQueueIOLoop, self).initialize(impl=_KQueue(), **kwargs)
}
end note

:tornado.ioloop.PollIOLoop.initialize(**kwargs);

:tornado.ioloop.IOLoop.initialize();

stop

@enduml